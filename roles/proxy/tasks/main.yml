---
#- name: stop and remove static files container
#  docker:
#    docker_api_version: "{{ docker_api_version }}"
#    state: absent
#    image: static-files
#    name: static-files
#  sudo: yes
#  tags:
#    - rebuild-proxy

# Get static resources from the userland container
#- name: static files container
#  docker:
#    image: jupyter/systemuser
#    state: running
#    name: static-files
#    command: echo "#data-container-hack"
#    volumes:
#    - "{{ notebook_static_files }}"
#  tags:
#    - rebuild-proxy

- name: install static jupyter notebook data
  pip:
    name: notebook
    version: 4.0.6
    extra_args: --target=/srv/notebook --no-deps
  tags:
    - rebuild-proxy

- name: get MathJax
  git:
    repo: https://github.com/mathjax/MathJax
    dest: /srv/ipython/IPython/html/static/components/MathJax
    version: 2.6.1
    force: yes
  tags:
    - rebuild-proxy

#- name: install mathjax
#  apt: update_cache=yes cache_valid_time=600 name=libjs-mathjax state=latest
#  sudo: yes
#  tags:
#    - rebuild-proxy

#- name: create static mathjax directory
#  file: state=directory dest=/srv/ipython/IPython/html/static/components/MathJax mode=0755
#  sudo: yes
#  tags:
#    - rebuild-proxy

#- name: copy mathjax assets to static directory
#  command: rsync -av /usr/share/javascript/mathjax/ /srv/ipython/IPython/html/static/components/MathJax/
#  sudo: yes
#  tags:
#    - rebuild-proxy

- name: configuration directories
  file: state=directory dest={{ item }} mode=0755
  with_items:
  - "{{ nginx_config_dir }}"
  sudo: yes
  tags:
    - rebuild-proxy

- name: SSL credentials
  template: src={{ item.from }} dest={{ item.to }} mode=0644
  with_items:
  - from: ssl.key.j2
    to: "{{ ssl_key_path }}"
  - from: ssl.crt.j2
    to: "{{ ssl_cert_path }}"
  sudo: yes
  tags:
    - rebuild-proxy

- name: nginx configuration
  template: src=nginx.conf.j2 dest={{ nginx_config_dir }}/nginx.conf mode=0644
  sudo: yes
  tags:
    - rebuild-proxy

- name: copy the Dockerfile to the nginx configuration directory
  template: src=Dockerfile.j2 dest={{ nginx_config_dir }}/Dockerfile mode=0644
  sudo: yes
  tags:
    - rebuild-proxy

- name: build nginx container
  docker_image:
    path: "{{ nginx_config_dir }}"
    name: nginx
    state: build
  sudo: yes
  tags:
    - rebuild-proxy

- name: stop and remove nginx container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    state: absent
    image: nginx
    name: nginx
  sudo: yes
  tags:
    - rebuild-proxy

- name: start nginx container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    image: nginx
    state: running
    name: nginx
    volumes: "{{ nginx_volumes }}"
    ports: "{{ nginx_ports }}"
  tags:
    - rebuild-proxy
